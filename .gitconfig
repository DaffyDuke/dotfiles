[user]
	email = daffyduke@lautre.net
	name = Olivier Duquesne
	signingkey = 63F60C2C
[push]
	default = simple
[merge]
        ff = only
[gc]
        reflogExpire = never
        reflogExpireUnreachable = never
[rerere]
        enabled = true
[rebase]
        autosquash = true
[color]
	ui = always
[gpg]
	program = /usr/bin/gpg
[commit]
	gpgsign = true
        verbose = true
[core]
	excludesfile = /home/oduquesne/.gitignore_global
        whitespace = trailing-space,space-before-tab
	autocrlf = input
        pager = delta --plus-color="#012800" --minus-color="#340001" --theme='Monokai Extended'

[interactive]
      diffFilter = delta --color-only

# [http]
# 	proxy = http://proxy.home:3128
#
# https://gist.github.com/mghignet/06e239a312efac607e7a92457387d8a6
# Discard all changes on your local branch and go back to the version you have on the remote branch
# Put this in your .gitconfig
[alias]
  dammit = !BRANCH=$(git rev-parse --abbrev-ref HEAD) \
    && git fetch origin $BRANCH \
    && git reset --hard origin/$BRANCH
# Usage: git dammit

# https://gist.github.com/mghignet/154da1507d53e759f7ed868f1ef87809
# Modify any commit of your history in one command (shorthand)
# Put this in your .gitconfig
  fixup = !sh -c 'SHA=$(git rev-parse $1) \
       && git commit --fixup $SHA \
       && git rebase -i --autosquash $SHA~' -
	pr = pull-request
	nb = !git checkout --track $(git config branch.$(git rev-parse --abbrev-ref HEAD).remote)/$(git rev-parse --abbrev-ref HEAD) -b
	p = push
	st = status -sb
	ll = log --oneline
	last = log -1 HEAD --stat
	cm = commit -m
	rv = remote -v
	d = diff
	gl = config --global -l
	se = !git rev-list --all | xargs git grep -F
	ff = merge --ff-only @{upstream}
# Usage: git fixup {sha1}

# EMOJI-LOG
# https://github.com/ahmadawais/Emoji-Log
  # Git Commit, Add all and Push ‚Äî in one step.
  cap = "!f() { git add .; git commit -m \"$@\"; git push; }; f"

  # NEW.
  new = "!f() { git cap \"üì¶ NEW: $@\"; }; f"
  # IMPROVE.
  imp = "!f() { git cap \"üëå IMPROVE: $@\"; }; f"
  # FIX.
  fix = "!f() { git cap \"üêõ FIX: $@\"; }; f"
  # RELEASE.
  rlz = "!f() { git cap \"üöÄ RELEASE: $@\"; }; f"
  # DOC.
  doc = "!f() { git cap \"üìñ DOC: $@\"; }; f"
  # TEST.
  tst = "!f() { git cap \"ü§ñ TEST: $@\"; }; f"
  # BREAKING CHANGE.
  brk = "!f() { git cap \"‚ÄºÔ∏è BREAKING: $@\"; }; f"

[help]
	autocorrect = 20
